<<<<<<< HEAD
from aiogram import types
from config import dp, bot
from aiogram.utils import executor

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup


from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton



import random
import img2pdf
import os


class Upload—Å(StatesGroup):
	waiting_for_image_conv = State()

def key_def():
    button_1 = KeyboardButton('üß∞PDF-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä')
    button_2 = KeyboardButton('AMONGUS')
    key_deff = ReplyKeyboardMarkup().row(button_1)
    key_deff = key_deff.row(button_2)
    return key_deff

def key_f():
    button_1 = KeyboardButton('üß∞–ù–∞–∂–º–∏ –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏—à—åüß∞')
    button_2 = KeyboardButton('–û—Ç–º–µ–Ω–∞')
    key_deff = ReplyKeyboardMarkup().row(button_1)
    key_deff = key_deff.row(button_2)
    return key_deff



@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    print(message.chat.id)
    await message.reply(text = """–û–û –±–ª—è –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞ –∫—Ç–æ –ø—Ä–∏–ø–µ—Ä—Å—è —Å—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫—É –∑–∞–≥—Ä—É–∂–∞—Ç—å""",  reply_markup=key_def())


@dp.message_handler(commands=['dping'])
async def process_start_command(message: types.Message):
    if message.chat.id == 1066122447:
    	f = open('conf.txt', 'r+')
    	internals = f.read()
    	if internals.isdigit():
    		internals = int(internals)
    	else:
    		f.seek(0)
    		f.truncate(0) 
    		f.write('1')
    	print('----------------------')
    	print(internals)
    	print('----------------------')
    	if internals == 1:
    		await message.reply(text = """–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ –ø–∏–Ω–≥""",  reply_markup=key_def())
    		internals = 2
    		f.seek(0)
    		f.truncate(0) 
    		f.write(str(internals))
    		f.close()
    	elif internals == 2:
    		await message.reply(text = """–í—ã –≤–∫–ª—é—á–∏–ª–∏ –ø–∏–Ω–≥""",  reply_markup=key_def())
    		internals = 1
    		f.seek(0)
    		f.truncate(0) 
    		f.write(str(internals))
    		f.close()
    	else:
    		f.seek(0)
    		f.truncate(0) 
    		f.write('1')
    		f.close()

    

@dp.message_handler(text=['AMONGUS'])
async def process_start_command(message: types.Message):
	print(message.from_user.username)
	f = open('conf.txt','r').read()
	if f == '1':
		textt = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '+str(message.chat.id)+' ( @' +str(message.from_user.username)+' ) '+' –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É AMONGUS'
		await bot.send_message(1066122447, text =textt, reply_markup=key_def())

	await bot.send_message(message.chat.id, text =""".                 ‚Äå‚Äå‚Äé‚£†‚£§‚£§‚£§‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
 ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ø‚†ã‚†Å‚†Ä‚†Ä‚†à‚†â‚†ô‚†ª‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†á‚†Ä‚¢Ä‚£¥‚£∂‚°æ‚†ø‚†ø‚†ø‚¢ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚†Ä‚£Ä‚£Ä‚£∏‚°ø‚†Ä‚†Ä‚¢∏‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚£æ‚°ü‚†õ‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£∑‚£§‚£§‚£§‚£§‚£∂‚£∂‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä 
 ‚¢Ä‚£ø‚†Ä‚¢Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚£∂‚£∂‚£ø‚£ø‚£ø‚£Ü 
 ‚¢∏‚£ø‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚†Ä‚£ø‚°á‚£Ä‚£†‚£¥‚£æ‚£Æ‚£ù‚†ø‚†ø‚†ø‚£ª‚°ü 
 ‚¢∏‚£ø‚†Ä‚†ò‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†â‚†Ä 
 ‚†∏‚£ø‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä
  ‚†ª‚£∑‚£∂‚£ø‚£á‚†Ä‚†Ä‚†Ä‚¢†‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£õ‚£ª
     ‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á
     ‚¢∏‚£ø‚£Ä‚£Ä‚£Ä‚£º‚°ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚°ø‚†Ä""", reply_markup=key_def())


@dp.message_handler(text=["–û—Ç–º–µ–Ω–∞"],state='*')
async def Confirms(message: types.Message, state: FSMContext):
	await bot.send_message(message.chat.id, text ='–û–∫', reply_markup=key_def())
	await state.finish()




@dp.message_handler(text=["üß∞PDF-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä"],state='*')
async def Confirms(message: types.Message, state: FSMContext):
	await bot.send_message(message.chat.id, text ='–ó–∞–≥—Ä—É–∂–∞–π —Ñ–æ—Ç–∫–∏', reply_markup=key_f())
	await Upload—Å.waiting_for_image_conv.set()
	await state.update_data(photo=[])



@dp.message_handler(state=Upload—Å.waiting_for_image_conv, content_types=types.ContentType.PHOTO)
async def photos(message: types.Message, state: FSMContext):
	for_photo = await state.get_data()
	ar = for_photo['photo']
	ar.append(message.photo[-1].file_id)
	await state.update_data(photo=ar)


@dp.message_handler(text=['üß∞–ù–∞–∂–º–∏ –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏—à—åüß∞'], state='*')
async def Confirms(message: types.Message, state: FSMContext):
	for_photo = await state.get_data()
	if not for_photo['photo']:
		print('return')
		return
	elif len(for_photo['photo'])>=50:
		message = await bot.send_message(message.chat.id, text =random.choices(['–¢—ã –∑–∞–≥—Ä—É–∑–∏–ª –±–æ–ª—å—à–µ 50 —Ñ–æ—Ç–æ, –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è.....', '–ù—É –ª–∞–¥–Ω–æ 30 —Ñ–æ—Ç–æ–∫ —è –º–æ–≥—É –ø–æ–≤–µ—Ä–∏—Ç—å, –Ω–æ 50+ —ç—Ç–æ –ø—Ä–µ–±–æ—Ä –±—Ä–∞—Ç–∏—à–∫–∞'], weights=[80, 20])[0], reply_markup=markup5)
		await state.finish()
	else:
		user_data = await state.get_data()
		photos = user_data['photo']

		await bot.send_message(chat_id=message.chat.id,text='–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥—É —Ñ–∞–π–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è',reply_markup=key_def())
		ppdf = []
		for i in range(len(photos)):
			if i ==0:
				name = photos[i]
			else:
				pass
			file = await bot.get_file(photos[i])
			ppdf.append(await bot.download_file(file_path=file.file_path))

		way_to_pdf = "temp_files/"+name+".pdf"
		with open(way_to_pdf,"wb") as f:
			f.write(img2pdf.convert(ppdf))
		await bot.send_document(chat_id=message.from_user.id,document=types.InputFile(way_to_pdf))
		await state.finish()
		os.remove(way_to_pdf)

if __name__ == '__main__':
=======
from aiogram import types
from config import dp, bot
from aiogram.utils import executor

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup


from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton



import random
import img2pdf
import os


class Upload—Å(StatesGroup):
	waiting_for_image_conv = State()

def key_def():
    button_1 = KeyboardButton('üß∞PDF-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä')
    button_2 = KeyboardButton('AMONGUS')
    key_deff = ReplyKeyboardMarkup().row(button_1)
    key_deff = key_deff.row(button_2)
    return key_deff

def key_f():
    button_1 = KeyboardButton('üß∞–ù–∞–∂–º–∏ –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏—à—åüß∞')
    button_2 = KeyboardButton('–û—Ç–º–µ–Ω–∞')
    key_deff = ReplyKeyboardMarkup().row(button_1)
    key_deff = key_deff.row(button_2)
    return key_deff



@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    print(message.chat.id)
    await message.reply(text = """–û–û –±–ª—è –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞ –∫—Ç–æ –ø—Ä–∏–ø–µ—Ä—Å—è —Å—Ö–µ–º–æ—Ç–µ—Ö–Ω–∏–∫—É –∑–∞–≥—Ä—É–∂–∞—Ç—å""",  reply_markup=key_def())


@dp.message_handler(commands=['dping'])
async def process_start_command(message: types.Message):
    if message.chat.id == 1066122447:
    	f = open('conf.txt', 'r+')
    	internals = f.read()
    	if internals.isdigit():
    		internals = int(internals)
    	else:
    		f.seek(0)
    		f.truncate(0) 
    		f.write('1')
    	print('----------------------')
    	print(internals)
    	print('----------------------')
    	if internals == 1:
    		await message.reply(text = """–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ –ø–∏–Ω–≥""",  reply_markup=key_def())
    		internals = 2
    		f.seek(0)
    		f.truncate(0) 
    		f.write(str(internals))
    		f.close()
    	elif internals == 2:
    		await message.reply(text = """–í—ã –≤–∫–ª—é—á–∏–ª–∏ –ø–∏–Ω–≥""",  reply_markup=key_def())
    		internals = 1
    		f.seek(0)
    		f.truncate(0) 
    		f.write(str(internals))
    		f.close()
    	else:
    		f.seek(0)
    		f.truncate(0) 
    		f.write('1')
    		f.close()

    

@dp.message_handler(text=['AMONGUS'])
async def process_start_command(message: types.Message):
	print(message.from_user.username)
	f = open('conf.txt','r').read()
	if f == '1':
		textt = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '+str(message.chat.id)+' ( @' +str(message.from_user.username)+' ) '+' –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É AMONGUS'
		await bot.send_message(1066122447, text =textt, reply_markup=key_def())

	await bot.send_message(message.chat.id, text =random.choices([""".                 ‚Äå‚Äå‚Äé‚£†‚£§‚£§‚£§‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
 ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ø‚†ã‚†Å‚†Ä‚†Ä‚†à‚†â‚†ô‚†ª‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†á‚†Ä‚¢Ä‚£¥‚£∂‚°æ‚†ø‚†ø‚†ø‚¢ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚†Ä‚£Ä‚£Ä‚£∏‚°ø‚†Ä‚†Ä‚¢∏‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
 ‚†Ä‚£æ‚°ü‚†õ‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£∑‚£§‚£§‚£§‚£§‚£∂‚£∂‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä 
 ‚¢Ä‚£ø‚†Ä‚¢Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚¢¥‚£∂‚£∂‚£ø‚£ø‚£ø‚£Ü 
 ‚¢∏‚£ø‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚†Ä‚£ø‚°á‚£Ä‚£†‚£¥‚£æ‚£Æ‚£ù‚†ø‚†ø‚†ø‚£ª‚°ü 
 ‚¢∏‚£ø‚†Ä‚†ò‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†â‚†Ä 
 ‚†∏‚£ø‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä ‚†Ä
  ‚†ª‚£∑‚£∂‚£ø‚£á‚†Ä‚†Ä‚†Ä‚¢†‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£õ‚£ª
     ‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á
     ‚¢∏‚£ø‚£Ä‚£Ä‚£Ä‚£º‚°ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚°ø‚†Ä""","""‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£∂‚£∂‚£∂‚£∂‚£∂‚£§‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚†â‚†â‚†â‚†â‚†â‚†ô‚¢¢‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ò‚°â‚¢ª‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ê‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚°¶‚£∏‚£∑‚£Ñ‚°Ä‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚°Ç‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ä‚£ø‚£ø‚£ø‚£ø‚£Ø‚°©‚£â‚†π‚¢∑‚¢¶‚†Å‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚°û‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°å‚†Ä‚†Ä‚¢Ä‚†â‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚£Ä‚††‚†§‚†ê‚†ö‚†±‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†â‚£ª‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä
‚°á‚†Ä‚†Ä‚°ä‚††‚†ê‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Ä‚¢Ä‚†Ü‚†ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°ó‚†í‚†í‚†Ä‚†Ä‚†Ä‚††‚†§‚¢§‚°Ä‚†Ä‚¢∏‚†Ä‚†ò‚†Ä‚†Ä‚¢å‚†ë‚¢¢‚†Ä‚†Ä‚†Ä
‚°á‚††‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚¢∫‚†Ä‚†ê‚†Ä‚†Ä‚†Ç‚†Ä‚†Ä‚†â‚†í‚†¢‚£Ñ
‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ç‚¢∞‚†§‚†Ä‚†Ä‚¢¶‚†Å‚†Ä‚†Ä‚¢Ç‚†Ä‚†Ä‚†ê‚†Ñ‚†Ä‚††‚†à‚†â‚†ë‚†¶‚°Ä
‚°á‚†Ä‚°Ä‚¢Ä‚†ê‚°Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ñ‚†Ä‚†Ä‚†ò"""]), reply_markup=key_def())


@dp.message_handler(text=["–û—Ç–º–µ–Ω–∞"],state='*')
async def Confirms(message: types.Message, state: FSMContext):
	await bot.send_message(message.chat.id, text ='–û–∫', reply_markup=key_def())
	await state.finish()




@dp.message_handler(text=["üß∞PDF-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä"],state='*')
async def Confirms(message: types.Message, state: FSMContext):
	await bot.send_message(message.chat.id, text ='–ó–∞–≥—Ä—É–∂–∞–π —Ñ–æ—Ç–∫–∏', reply_markup=key_f())
	await Upload—Å.waiting_for_image_conv.set()
	await state.update_data(photo=[])



@dp.message_handler(state=Upload—Å.waiting_for_image_conv, content_types=types.ContentType.PHOTO)
async def photos(message: types.Message, state: FSMContext):
	for_photo = await state.get_data()
	ar = for_photo['photo']
	ar.append(message.photo[-1].file_id)
	await state.update_data(photo=ar)


@dp.message_handler(text=['üß∞–ù–∞–∂–º–∏ –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏—à—åüß∞'], state='*')
async def Confirms(message: types.Message, state: FSMContext):
	for_photo = await state.get_data()
	if not for_photo['photo']:
		print('return')
		return
	elif len(for_photo['photo'])>=50:
		message = await bot.send_message(message.chat.id, text =random.choices(['–¢—ã –∑–∞–≥—Ä—É–∑–∏–ª –±–æ–ª—å—à–µ 50 —Ñ–æ—Ç–æ, –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è.....', '–ù—É –ª–∞–¥–Ω–æ 30 —Ñ–æ—Ç–æ–∫ —è –º–æ–≥—É –ø–æ–≤–µ—Ä–∏—Ç—å, –Ω–æ 50+ —ç—Ç–æ –ø—Ä–µ–±–æ—Ä –±—Ä–∞—Ç–∏—à–∫–∞'], weights=[80, 20])[0], reply_markup=markup5)
		await state.finish()
	else:
		user_data = await state.get_data()
		photos = user_data['photo']

		await bot.send_message(chat_id=message.chat.id,text='–ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥—É —Ñ–∞–π–ª —Å–æ–∑–¥–∞–µ—Ç—Å—è',reply_markup=key_def())
		ppdf = []
		for i in range(len(photos)):
			if i ==0:
				name = photos[i]
			else:
				pass
			file = await bot.get_file(photos[i])
			ppdf.append(await bot.download_file(file_path=file.file_path))

		way_to_pdf = "temp_files/"+name+".pdf"
		with open(way_to_pdf,"wb") as f:
			f.write(img2pdf.convert(ppdf))
		await bot.send_document(chat_id=message.from_user.id,document=types.InputFile(way_to_pdf))
		await state.finish()
		os.remove(way_to_pdf)

if __name__ == '__main__':
>>>>>>> first commit
    executor.start_polling(dp,skip_updates=True)